# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- develop

pool:
  vmImage: ubuntu-latest

steps:
- task: Kubernetes@1
  displayName: apply rbac
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'AppConsultSandbox-to-Crapi'
    azureResourceGroup: 'sidney-crapi-rg'
    kubernetesCluster: 'crapi'
    namespace: 'crapi'
    command: 'apply'
    arguments: '-n crapi -f deploy/k8s/base/rbac'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

- task: Kubernetes@1
  displayName: apply mongodb
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'AppConsultSandbox-to-Crapi'
    azureResourceGroup: 'sidney-crapi-rg'
    kubernetesCluster: 'crapi'
    namespace: 'crapi'
    command: 'apply'
    arguments: '-n crapi -f deploy/k8s/base/mongodb'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

- task: Kubernetes@1
  displayName: apply postgres
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'AppConsultSandbox-to-Crapi'
    azureResourceGroup: 'sidney-crapi-rg'
    kubernetesCluster: 'crapi'
    namespace: 'crapi'
    command: 'apply'
    arguments: '-n crapi -f deploy/k8s/base/postgres'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

- task: Kubernetes@1
  displayName: apply mailhog
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'AppConsultSandbox-to-Crapi'
    azureResourceGroup: 'sidney-crapi-rg'
    kubernetesCluster: 'crapi'
    namespace: 'crapi'
    command: 'apply'
    arguments: '-n crapi -f deploy/k8s/base/mailhog'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

- task: Kubernetes@1
  displayName: apply identity
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'AppConsultSandbox-to-Crapi'
    azureResourceGroup: 'sidney-crapi-rg'
    kubernetesCluster: 'crapi'
    namespace: 'crapi'
    command: 'apply'
    arguments: '-n crapi -f deploy/k8s/base/identity'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

- task: Kubernetes@1
  displayName: apply community
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'AppConsultSandbox-to-Crapi'
    azureResourceGroup: 'sidney-crapi-rg'
    kubernetesCluster: 'crapi'
    namespace: 'crapi'
    command: 'apply'
    arguments: '-n crapi -f deploy/k8s/base/community'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

- task: Kubernetes@1
  displayName: apply workshop
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'AppConsultSandbox-to-Crapi'
    azureResourceGroup: 'sidney-crapi-rg'
    kubernetesCluster: 'crapi'
    namespace: 'crapi'
    command: 'apply'
    arguments: '-n crapi -f deploy/k8s/base/workshop'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

- task: Kubernetes@1
  displayName: apply web
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'AppConsultSandbox-to-Crapi'
    azureResourceGroup: 'sidney-crapi-rg'
    kubernetesCluster: 'crapi'
    namespace: 'crapi'
    command: 'apply'
    arguments: '-n crapi -f deploy/k8s/base/web'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

- task: Kubernetes@1
  displayName: apply minikube/mailhog
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'AppConsultSandbox-to-Crapi'
    azureResourceGroup: 'sidney-crapi-rg'
    kubernetesCluster: 'crapi'
    namespace: 'crapi'
    command: 'apply'
    arguments: '-n crapi -f deploy/k8s/minikube/mailhog'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'

- task: Kubernetes@1
  displayName: apply minikube/web
  inputs:
    connectionType: 'Azure Resource Manager'
    azureSubscriptionEndpoint: 'AppConsultSandbox-to-Crapi'
    azureResourceGroup: 'sidney-crapi-rg'
    kubernetesCluster: 'crapi'
    namespace: 'crapi'
    command: 'apply'
    arguments: '-n crapi -f deploy/k8s/minikube/web'
    secretType: 'dockerRegistry'
    containerRegistryType: 'Azure Container Registry'